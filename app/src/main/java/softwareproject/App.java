/*
 * This Java source file was generated by the Gradle 'init' task.
 * psql
 * executeUpdate() : This method is used for execution of DML statement(INSERT, UPDATE and DELETE) 
 * which is return int value, count of the affected rows.
 *executeQuery() : This method is used to retrieve data from database using SELECT query. 
 *This method returns the ResultSet object that returns the data according to the query.
 */
/*
 * grading system:
 * A:10, A-:9, B:8, B-:7, C:6, C-:5, D:4, F:0
 * CGPA=(summation(f(grade)*credit))/(total credit)
 * Exclude credit contribution by 'F' grade
 */
package softwareproject;
import java.sql.*;
import java.util.*;

public class App {
    
    private final String url = "jdbc:postgresql://localhost/miniproject";
    private final String user = "postgres";
    private final String password = "Amit@7870";

    public Connection connect() {
        Connection conn = null;
        try {
            conn = DriverManager.getConnection(url, user, password);
            System.out.println("Connected to the PostgreSQL server successfully.");
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
        return conn;
    }
    public static void main(String[] args) {
        App app= new App();
        Connection conn = app.connect();
        while(true){
          System.out.println("Welcome user!!");
          System.out.println("Press 1. for Login");
          System.out.println("Press 2. for Exit");
          Scanner scn = new Scanner(System.in);
          String input = scn.nextLine();
            if(input.equals("1")){
              System.out.println("Enter Email");
              String email = scn.nextLine();
              System.out.println("Enter Password");
              String pass = scn.nextLine();
              try {
                  Statement statement = conn.createStatement();
                  String query = "SELECT * FROM users WHERE email_id='"+email+"' AND password='"+pass+"' ";
                  ResultSet rs = statement.executeQuery(query);

                  if(rs.next()){   
                      String name=rs.getString(2);
                      String role=rs.getString(4);
                      if(role.equals("s")){
                        Student s = new Student(name,email,conn);
                        s.log(0,conn,email);
                        String[] result=s.current_session(conn);
                        Integer current_semester=s.check_current_semester(result[0],result[1]);
                        System.out.println("Welcome "+name);
                        while(true){
                            input=s.display(scn);
                            if(input.equals("1")){
                                //Registering a course
                                if(s.check_elgible_for_enrolling()==true){
                                    System.out.println("Enter course_code");
                                    String course_code = scn.nextLine();
                                    System.out.println("Enter instructor_id");
                                    String instructor_id = scn.nextLine();
                                    if(s.check_already_done(course_code)){
                                        String check[]=s.check_offered_or_not(course_code,instructor_id,conn);
                                    if(check[0].equals("true")){
                                        if(s.check_min_requirements(result[0],result[1],course_code,current_semester)){
                                            if(s.calc_CGPA()>=Float.parseFloat(check[1])){
                                                if(s.check_prerequisites(course_code,result[0],result[1])){
                                                boolean check_previous=s.check_previous(result[0], result[1]);
                                                boolean check_back_previous=s.check_back_previous(result[0], result[1]);
                                                float current_registered_credits=s.check_current_credits(result[0],result[1]);
                                                float course_credit=s.course_credit(result[0],result[1],course_code);
                                                
                                                if(check_back_previous==true && check_previous==true){
                                                    float earn_prev_two=s.calc_credit_prev_two(result[0],result[1]);
                                                    if(course_credit+current_registered_credits<=1.25*earn_prev_two){
                                                        s.register_course(result[0],result[1],course_code,instructor_id);
                                                        System.out.println("Succesfully enrolled");
                                                    }else{
                                                        System.out.println("Credit limit exceeded");
                                                    }
                                                }else{  
                                                    if(course_credit+current_registered_credits<=18){
                                                        s.register_course(result[0],result[1],course_code,instructor_id);
                                                        System.out.println("Succesfully enrolled");
                                                    }else{
                                                        System.out.println("Credit limit exceeded");
                                                    }                                 
                                                }
                                                }else{
                                                    System.out.println("Not fulfilling prerequisites");
                                                } 
                                            }else{
                                                System.out.println("Not fulfilling CGPA criteria");
                                            }
                                            
                                        }else{
                                            System.out.println("Either branch or your semester not elligible");
                                        }

                                        }else{
                                            System.out.println("Course not offered");
                                        }
                                    }else{
                                        System.out.println("Already enrolled");
                                    }  
                                }else{
                                    System.out.println("Not elligible for enrolling");
                                }

                            }else if(input.equals("2")){
                                //Deregistering a course
                                if(s.check_elgible_for_enrolling()==true){
                                    System.out.println("Enter course_code");
                                    String course_code = scn.nextLine();
                                    System.out.println("Enter instructor_id");
                                    String instructor_id = scn.nextLine();
                                    String check[]=s.check_offered_or_not(course_code,instructor_id,conn);
                                    if(check[0].equals("true")){
                                        if(s.check_enrolled(result[0],result[1],course_code)){
                                            //check for PC or PE
                                            if(s.check_core_elective(result[0],result[1],course_code)){
                                                s.derigster_course(result[0],result[1],course_code,instructor_id);
                                                System.out.println("Successfully un-enrolled");
                                            }else{
                                                System.out.println("You can't unenroll PC coures");
                                            }
                                        }else{
                                            System.out.println("Not enrolled in that course");
                                        }   
                                    }else{
                                        System.out.println("Course not offered");
                                    }
                                }else{
                                    System.out.println("Not elligible for enrolling");
                                }      
                            }else if(input.equals("3")){
                                // viewing grade
                                System.out.println("Enter Academic year");
                                String academic_year = scn.nextLine();
                                System.out.println("Enter semester");
                                String semester = scn.nextLine();
                                s.show_grade(academic_year,semester);
                            }else if(input.equals("4")){
                                // calculating CGPA
                                Float cgpa=s.calc_CGPA();
                                System.out.println("Your cgpa is: "+cgpa);
                    
                            }else if(input.equals("5")){
                                // checking whether graduated or not
                                if(s.isgraduated()){
                                    System.out.println("Elligible for graduation");
                                }else{
                                    System.out.println("Not elligible for graduation");
                                }  
                            }else{
                                // logout
                                s.log(1,conn,email);
                                break;
                            }
                        } 
                      }else if(role.equals("i")){
                        Instructor i = new Instructor(name,email,conn);
                        i.log(0,conn,email);
                        String[] result=i.current_session(conn);
                        System.out.println("Welcome "+name);
                        while(true){
                            input=i.display(scn);
                            if(input.equals("1")){
                                // view grade
                                System.out.println("Enter course_code");
                                String course_code=scn.nextLine();
                                String check[]=i.check_offered_or_not(course_code,email,conn);
                                if(check[0].equals("true")){
                                    i.show_course_record(course_code);
                                }else{
                                    System.out.println("Course hasn't been offered");
                                }   
                            }else if(input.equals("2")){
                                //Update grade
                                if(i.elligible_update_grade()){
                                    System.out.println("Enter course_code");
                                    String course_code=scn.nextLine();
                                    String check[]=i.check_offered_or_not(course_code,email,conn);
                                    if(check[0].equals("true")){
                                        i.update_grade(course_code);
                                        System.out.println("Successfully updated");
                                    }else{
                                        System.out.println("Course hasn't been offered");
                                    }
                                }else{
                                    System.out.println("Grade can't be updated now");
                                }
                            }else if(input.equals("3")){
                                // Register course
                                if(i.elligible_register_course()){
                                    System.out.println("Enter course_code");
                                    String course_code=scn.nextLine();
                                    String check[]=i.check_offered_or_not(course_code,email,conn);
                                    if(check[0].equals("true")){
                                        System.out.println("Already registered");
                                    }else{
                                        if(i.ispresentincatalog(result[0],result[1],course_code)){
                                            System.out.println("Enter minm CGPA (Enter 0 for no constraints)");
                                            String cgpa=scn.nextLine();
                                            i.addcourse(course_code,cgpa);
                                            i.addPCcourse(course_code,result[0],result[1]);
                                            System.out.println("Succesfully added");
                                        }else{
                                            System.out.println("Not present in catalog");
                                        }
                                    }
                                }else{
                                    System.out.println("Can't add course now");
                                }
                            }else if(input.equals("4")){
                                // Dereigister course
                                if(i.elligible_register_course()){
                                    System.out.println("Enter course_code");
                                    String course_code=scn.nextLine();
                                    String check[]=i.check_offered_or_not(course_code,email,conn);
                                    if(check[0].equals("true")){
                                        i.removecourse(course_code);
                                        i.removepccourse(course_code,result[0],result[1]);
                                        System.out.println("Successfully deregistered");
                                    }else{
                                        System.out.println("Not offered");
                                    }
                                }else{
                                    System.out.println("Can't remove course now");
                                }
                            }else if(input.equals("5")){
                                // Validate
                                if(i.elligible_validate_course()){
                                    System.out.println("Enter course_code");
                                    String course_code=scn.nextLine();
                                    String check[]=i.check_offered_or_not(course_code,email,conn);
                                    if(check[0].equals("true")){
                                        i.validatecourse(course_code);
                                        System.out.println("Successfully validated");
                                    }else{
                                        System.out.println("Not offered");
                                    }
                                }else{
                                    System.out.println("Can't validate course now");
                                }
                            }else{
                                 // logout
                                 i.log(1,conn,email);
                                 break;
                            }
                        }
                      }else{
                        Admin a = new Admin(name,email,conn);
                        a.log(0,conn,email);
                        String[] result=a.current_session(conn);
                        System.out.println("Welcome "+name);
                        while(true){
                            input=a.display(scn);
                            if(input.equals("1")){
                                if(a.elligible_edit_catalog()){
                                    System.out.println("Press 1. for adding course, 2. for editing course");
                                    String take=scn.nextLine();
                                    if(take.equals("1")){
                                        System.out.println("Enter course_code");
                                        String input_code=scn.nextLine();
                                        if(a.check_catalog_offered(input_code,result[0],result[1])){
                                            System.out.println("Enter L");
                                            String l=scn.nextLine();
                                            System.out.println("Enter T");
                                            String t=scn.nextLine();
                                            System.out.println("Enter P");
                                            String p=scn.nextLine();
                                            System.out.println("Enter prerequisites(comma separated)");
                                            String prerequisites=scn.nextLine();
                                            System.out.println("Enter branch_elligible(comma separated)");
                                            String branch_elligible=scn.nextLine();
                                            System.out.println("Enter minm semester required");
                                            String minm_sem=scn.nextLine();
                                            System.out.println("Enter core_elective(comma separated) (PC for core and PE for elective)");
                                            String core_elective=scn.nextLine();
                                            a.addcoursecatalog(input_code,l,t,p,result[0],result[1],prerequisites,branch_elligible,minm_sem,core_elective);
                                        }else{
                                            System.out.println("Already in catalog");
                                        }
                                        
                                    }else{
                                        System.out.println("Enter course_code");
                                        String input_code=scn.nextLine();
                                        if(a.check_catalog_offered(input_code, result[0], result[1])){
                                            System.out.println("Not offered");
                                        }else{
                                            System.out.println("Enter L");
                                            String l=scn.nextLine();
                                            System.out.println("Enter T");
                                            String t=scn.nextLine();
                                            System.out.println("Enter P");
                                            String p=scn.nextLine();
                                            System.out.println("Enter prerequisites(comma separated)");
                                            String prerequisites=scn.nextLine();
                                            System.out.println("Enter branch_elligible(comma separated)(Needed)");
                                            String branch_elligible=scn.nextLine();
                                            System.out.println("Enter minm semester required(Needed)");
                                            String minm_sem=scn.nextLine();
                                            System.out.println("Enter core_elective(comma separated) (PC for core and PE for elective)(Needed)");
                                            String core_elective=scn.nextLine();
                                            a.updatecoursecatalog(input_code,l,t,p,result[0],result[1],prerequisites,branch_elligible,minm_sem,core_elective);
                                        }
                                    }
                                }else{
                                    System.out.println("Can't edit course catalog now");
                                }

                            }else if(input.equals("2")){
                                //viewing grade
                                System.out.println("Enter student email_id");
                                String stu_email=scn.nextLine();
                                if(a.check_stu_email(stu_email)){
                                    System.out.println("Enter academic_year");
                                    String ac_year=scn.nextLine();
                                    System.out.println("Enter semester");
                                    String sem=scn.nextLine();
                                    a.view_grade(stu_email,ac_year,sem);
                                }else{
                                    System.out.println("No such student");
                                }
                            }else if(input.equals("3")){
                                //generating transcripts
                                System.out.println("Enter student email_id");
                                String stu_email=scn.nextLine();
                                if(a.check_stu_email(stu_email)){
                                    a.generate_transcripts(stu_email);
                                    System.out.println("Transcript generated");
                                }else{
                                    System.out.println("No such student");
                                }

                            }else if(input.equals("4")){
                                //edit deadlines
                                System.out.println("Press 1. for course_catalog, 2. for course_float, 3. for course_register, 4. for grade");
                                String user_input=scn.nextLine();
                                if(user_input.equals("4")){
                                    System.out.println("Input should be 'T' or 'F', with one 'T' at max");
                                    System.out.println("Set start time");
                                    String start = scn.nextLine();
                                    System.out.println("Set end time");
                                    String end= scn.nextLine();
                                    System.out.println("Set validation_check time");
                                    String validation_check=scn.nextLine();
                                    a.set_grade_deadline(start,end,validation_check);
                                }else{
                                    System.out.println("Input should be 'T' or 'F', with one 'T' at max");
                                    System.out.println("Set start time");
                                    String start = scn.nextLine();
                                    System.out.println("Set end time");
                                    String end= scn.nextLine();
                                    a.set_rest_deadline(user_input,start,end);
                                }
                            }else if(input.equals("5")){
                                //update current sessions
                                System.out.println("Enter academic_year");
                                String year=scn.nextLine();
                                System.out.println("Enter semester");
                                String sem=scn.nextLine();
                                if(!year.equals(result[0]) || !sem.equals(result[1])){
                                    a.updatesession(year,sem,result[0],result[1]);
                                    System.out.println("Succesfully updated");
                                }
                            }else if(input.equals("6")){
                                if(a.elligible_validate()){
                                    a.validate(result[0],result[1]);
                                    System.out.println("Successfully validated");
                                }else{
                                    System.out.println("Not elligible for validating");
                                }

                            }else if(input.equals("7")){
                                a.log(1,conn,email);
                                 break;
                            }
                            else{
                            }
                        }
                      }
                  }else{
                      System.out.println("Credential invalid");
                  }
  
              } catch (SQLException e) {
                  // TODO Auto-generated catch block
                  e.printStackTrace();
              }
  
            }else if(input.equals("2")){
                System.exit(0);
            }
            else{
            }
        }
    }
}
